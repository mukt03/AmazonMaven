<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="mukta" failures="0" tests="2" name="ChromeTest" time="0.176" errors="0" timestamp="2023-03-24T08:25:36 IST">
  <testcase classname="testNg.TestNg" name="@BeforeTest openBrowser" time="0.064">
    <failure type="java.lang.IllegalStateException" message="The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from https://chromedriver.storage.googleapis.com/index.html">
      <![CDATA[java.lang.IllegalStateException: The path to the driver executable The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from https://chromedriver.storage.googleapis.com/index.html
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:280)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:132)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:38)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:231)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:434)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:127)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:46)
at testNg.TestNg.openBrowser(TestNg.java:36)
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest openBrowser -->
  <testcase classname="testNg.TestNg" name="@BeforeClass beforeClass" time="-1.679626535999E9">
    <skipped/>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase classname="testNg.TestNg" name="@BeforeMethod beforeMethod" time="-1.679626536018E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testNg.TestNg" name="@AfterMethod afterMethod" time="-1.679626536037E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNg.TestNg" name="@BeforeMethod beforeMethod" time="-1.679626536052E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testNg.TestNg" name="@AfterMethod afterMethod" time="-1.679626536059E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNg.TestNg" name="@AfterClass afterClass" time="-1.679626536061E9">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="testNg.TestNg" name="@AfterTest closeBrowser" time="-1.679626536065E9">
    <skipped/>
  </testcase> <!-- @AfterTest closeBrowser -->
  <testcase classname="testNg.TestNg" name="test1" time="0.0">
    <skipped/>
  </testcase> <!-- test1 -->
  <testcase classname="testNg.TestNg" name="test2" time="0.0">
    <skipped/>
  </testcase> <!-- test2 -->
</testsuite> <!-- ChromeTest -->
